Index: src/main/webapp/test.html
===================================================================
--- src/main/webapp/test.html	(date 1566213667000)
+++ src/main/webapp/test.html	(date 1566213667000)
@@ -1,13 +0,0 @@
-<html>
-<link rel="stylesheet" href="resources/css/style.css">
-<link rel="stylesheet" href="webjars/bootstrap/4.1.0/css/bootstrap.min.css">
-<link rel="shortcut icon" href="resources/images/icon-meal.png">
-<body>
-<hr/>
-<ul>
-    <li><a href="users">User list</a></li>
-    <li><a href="meals">Meal list</a></li>
-</ul>
-<hr/>
-</body>
-</html>
\ No newline at end of file
Index: config/messages/app.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/messages/app.properties	(date 1566213667000)
+++ config/messages/app.properties	(date 1566213889524)
@@ -51,6 +51,7 @@
 error.dataNotFound=Data not found
 error.dataError=Data error
 error.validationError=Validation error
+error.wrongRequest=Wrong request
 
 NotEmpty="{0}" must not be empty
 NotBlank="{0}" must not be empty
Index: config/messages/app_ru.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/messages/app_ru.properties	(date 1566213667000)
+++ config/messages/app_ru.properties	(date 1566213889528)
@@ -53,6 +53,7 @@
 error.dataNotFound=Данные не найдены
 error.dataError=Ошибка в данных
 error.validationError=Ошибка проверки данных
+error.wrongRequest=Неверный запрос
 
 NotEmpty=Поле "{0}" не должно быть пустым
 NotBlank=Поле "{0}" не должно быть пустым
Index: src/main/java/ru/javawebinar/topjava/util/ValidationUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/ValidationUtil.java	(date 1566213667000)
+++ src/main/java/ru/javawebinar/topjava/util/ValidationUtil.java	(date 1566214467715)
@@ -1,9 +1,12 @@
 package ru.javawebinar.topjava.util;
 
+import org.slf4j.Logger;
 import ru.javawebinar.topjava.HasId;
+import ru.javawebinar.topjava.util.exception.ErrorType;
 import ru.javawebinar.topjava.util.exception.IllegalRequestDataException;
 import ru.javawebinar.topjava.util.exception.NotFoundException;
 
+import javax.servlet.http.HttpServletRequest;
 import javax.validation.*;
 import java.util.Set;
 
@@ -77,4 +80,14 @@
             throw new ConstraintViolationException(violations);
         }
     }
+
+    public static Throwable logAndGetRootCause(Logger log, HttpServletRequest req, Exception e, boolean logException, ErrorType errorType) {
+        Throwable rootCause = ValidationUtil.getRootCause(e);
+        if (logException) {
+            log.error(errorType + " at request " + req.getRequestURL(), rootCause);
+        } else {
+            log.warn("{} at request  {}: {}", errorType, req.getRequestURL(), rootCause.toString());
+        }
+        return rootCause;
+    }
 }
\ No newline at end of file
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/web.xml	(date 1566213667000)
+++ src/main/webapp/WEB-INF/web.xml	(date 1566213895842)
@@ -30,6 +30,10 @@
             <param-name>contextConfigLocation</param-name>
             <param-value>classpath:spring/spring-mvc.xml</param-value>
         </init-param>
+        <init-param>
+            <param-name>throwExceptionIfNoHandlerFound</param-name>
+            <param-value>true</param-value>
+        </init-param>
         <load-on-startup>1</load-on-startup>
     </servlet>
     <servlet-mapping>
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1566213667000)
+++ src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1566213889534)
@@ -4,7 +4,8 @@
     APP_ERROR("error.appError"),
     DATA_NOT_FOUND("error.dataNotFound"),
     DATA_ERROR("error.dataError"),
-    VALIDATION_ERROR("error.validationError");
+    VALIDATION_ERROR("error.validationError"),
+    WRONG_REQUEST("error.wrongRequest");
 
     private final String errorCode;
 
Index: src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1566213667000)
+++ src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1566213889548)
@@ -92,12 +92,7 @@
     }
 
     private ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logException, ErrorType errorType, String... details) {
-        Throwable rootCause = ValidationUtil.getRootCause(e);
-        if (logException) {
-            log.error(errorType + " at request " + req.getRequestURL(), rootCause);
-        } else {
-            log.warn("{} at request  {}: {}", errorType, req.getRequestURL(), rootCause.toString());
-        }
+        Throwable rootCause = ValidationUtil.logAndGetRootCause(log, req, e, logException, errorType);
         return new ErrorInfo(req.getRequestURL(), errorType,
                 messageUtil.getMessage(errorType.getErrorCode()),
                 details.length != 0 ? details : new String[]{ValidationUtil.getMessage(rootCause)});
Index: src/main/resources/spring/spring-mvc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/spring/spring-mvc.xml	(date 1566213667000)
+++ src/main/resources/spring/spring-mvc.xml	(date 1566213895832)
@@ -11,7 +11,8 @@
     <bean class="ru.javawebinar.topjava.web.json.JacksonObjectMapper" id="objectMapper" factory-method="getMapper"/>
 
     <!-- serve static resources (*.html, ...) from src/main/webapp/ -->
-    <mvc:default-servlet-handler/>
+    <!--https://stackoverflow.com/a/44393203/548473-->
+    <!--<mvc:default-servlet-handler/>-->
 
     <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
 
Index: src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java	(date 1566213667000)
+++ src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java	(date 1566214445868)
@@ -6,6 +6,7 @@
 import org.springframework.web.bind.annotation.ControllerAdvice;
 import org.springframework.web.bind.annotation.ExceptionHandler;
 import org.springframework.web.servlet.ModelAndView;
+import org.springframework.web.servlet.NoHandlerFoundException;
 import ru.javawebinar.topjava.AuthorizedUser;
 import ru.javawebinar.topjava.util.ValidationUtil;
 import ru.javawebinar.topjava.util.exception.ErrorType;
@@ -19,12 +20,21 @@
     @Autowired
     private MessageUtil messageUtil;
 
+    @ExceptionHandler(NoHandlerFoundException.class)
+    public ModelAndView wrongRequest(HttpServletRequest req, NoHandlerFoundException e) throws Exception {
+        return logAndGetExceptionView(req, e, false, ErrorType.WRONG_REQUEST);
+    }
+
     @ExceptionHandler(Exception.class)
     public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception {
-        log.error("Exception at request " + req.getRequestURL(), e);
-        Throwable rootCause = ValidationUtil.getRootCause(e);
+        return logAndGetExceptionView(req, e, true, ErrorType.APP_ERROR);
+    }
+
+    private ModelAndView logAndGetExceptionView(HttpServletRequest req, Exception e, boolean logException, ErrorType errorType) {
+        Throwable rootCause = ValidationUtil.logAndGetRootCause(log, req, e, logException, errorType);
+
         ModelAndView mav = new ModelAndView("exception/exception");
-        mav.addObject("typeMessage", messageUtil.getMessage(ErrorType.APP_ERROR.getErrorCode()));
+        mav.addObject("typeMessage", messageUtil.getMessage(errorType.getErrorCode()));
         mav.addObject("exception", rootCause);
         mav.addObject("message", ValidationUtil.getMessage(rootCause));
 
