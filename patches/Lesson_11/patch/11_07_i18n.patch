Index: config/messages/app.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/messages/app.properties	(date 1566212643000)
+++ config/messages/app.properties	(date 1566212676345)
@@ -16,6 +16,11 @@
 user.password=Password
 user.caloriesPerDay=Daily calorie limit
 
+userTo.name=Name
+userTo.email=Email
+userTo.password=Password
+userTo.caloriesPerDay=Daily calorie limit
+
 meal.title=Meals
 meal.edit=Edit meal
 meal.add=Add meal
@@ -34,11 +39,23 @@
 common.saved=Record saved
 common.enabled=Record enabled
 common.disabled=Record disabled
-common.errorStatus=Error status
-common.appError=Application error
 common.confirm=Are you sure?
 common.save=Save
 common.cancel=Cancel
+common.search=Search
 
 exception.user.duplicateEmail=User with this email already exists
-exception.meal.duplicateDateTime=You already have meal with this date/time
\ No newline at end of file
+exception.meal.duplicateDateTime=You already have meal with this date/time
+
+error.appError=Application error
+error.dataNotFound=Data not found
+error.dataError=Data error
+error.validationError=Validation error
+
+NotEmpty="{0}" must not be empty
+NotBlank="{0}" must not be empty
+NotNull="{0}" must not be empty
+Email= Invalid format of "{0}"
+Range="{0}" must be between {2} and {1}
+Length="{0}" length must be between {2} and {1}
+Size="{0}" size must be between {2} and {1}
\ No newline at end of file
Index: config/messages/app_ru.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/messages/app_ru.properties	(date 1566212643000)
+++ config/messages/app_ru.properties	(date 1566212676354)
@@ -16,6 +16,11 @@
 user.password=Пароль
 user.caloriesPerDay=Норма калорий в день
 
+userTo.name=Имя
+userTo.email=Почта
+userTo.password=Пароль
+userTo.caloriesPerDay=Норма калорий в день
+
 meal.title=Моя еда
 meal.edit=Редактировать еду
 meal.add=Добавить еду
@@ -39,6 +44,20 @@
 common.confirm=Вы уверены?
 common.save=Сохранить
 common.cancel=Отменить
+common.search=Искать
 
 exception.user.duplicateEmail=Пользователь с такой почтой уже есть в приложении
-exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем
\ No newline at end of file
+exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем
+
+error.appError=Ошибка приложения
+error.dataNotFound=Данные не найдены
+error.dataError=Ошибка в данных
+error.validationError=Ошибка проверки данных
+
+NotEmpty=Поле "{0}" не должно быть пустым
+NotBlank=Поле "{0}" не должно быть пустым
+NotNull=Поле "{0}" не должно быть пустым
+Email=Неверный формат поля "{0}"
+Range=Поле "{0}" должно быть между {2} и {1}
+Length=Длинна поля "{0}" должена быть между {2} и {1}
+Size=Размер поля "{0}" должен быть между {2} и {1}
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java	(date 1566212643000)
+++ src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java	(date 1566212676362)
@@ -3,11 +3,13 @@
 public class ErrorInfo {
     private final String url;
     private final ErrorType type;
+    private final String typeMessage;
     private final String[] details;
 
-    public ErrorInfo(CharSequence url, ErrorType type, String... details) {
+    public ErrorInfo(CharSequence url, ErrorType type, String typeMessage, String... details) {
         this.url = url.toString();
         this.type = type;
+        this.typeMessage = typeMessage;
         this.details = details;
     }
 }
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp	(date 1566212643000)
+++ src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp	(date 1566212734431)
@@ -8,7 +8,7 @@
     i18n["addTitle"] = '<spring:message code="${param.page}.add"/>';
     i18n["editTitle"] = '<spring:message code="${param.page}.edit"/>';
 
-    <c:forEach var='key' items='<%=new String[]{"common.deleted", "common.saved", "common.enabled", "common.disabled", "common.errorStatus", "common.confirm"}%>'>
+    <c:forEach var='key' items='<%=new String[]{"common.deleted", "common.saved", "common.enabled", "common.disabled", "common.search", "common.confirm"}%>'>
     i18n['${key}'] = '<spring:message code="${key}"/>';
     </c:forEach>
 </script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/exception/exception.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/exception/exception.jsp	(date 1566212643000)
+++ src/main/webapp/WEB-INF/jsp/exception/exception.jsp	(date 1566212734420)
@@ -11,7 +11,7 @@
 <div class="jumbotron">
     <div class="container text-center">
         <br>
-        <h2><spring:message code="common.appError"/></h2>
+        <h2>${typeMessage}</h2>
         <h3>${message}</h3>
     </div>
 </div>
Index: src/main/webapp/resources/css/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/resources/css/style.css	(date 1566212643000)
+++ src/main/webapp/resources/css/style.css	(date 1566213263102)
@@ -32,6 +32,11 @@
     border: 1px solid #9feba6;
 }
 
+/*https://stackoverflow.com/a/53855189/548473*/
+#noty_layout__bottomRight {
+    width: 385px !important;
+}
+
 /*https://getbootstrap.com/docs/4.0/examples/sticky-footer/sticky-footer.css*/
 html {
     position: relative;
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1566212643000)
+++ src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1566212676372)
@@ -1,8 +1,18 @@
 package ru.javawebinar.topjava.util.exception;
 
 public enum ErrorType {
-    APP_ERROR,
-    DATA_NOT_FOUND,
-    DATA_ERROR,
-    VALIDATION_ERROR
+    APP_ERROR("error.appError"),
+    DATA_NOT_FOUND("error.dataNotFound"),
+    DATA_ERROR("error.dataError"),
+    VALIDATION_ERROR("error.validationError");
+
+    private final String errorCode;
+
+    ErrorType(String errorCode) {
+        this.errorCode = errorCode;
+    }
+
+    public String getErrorCode() {
+        return errorCode;
+    }
 }
Index: src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1566212643000)
+++ src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1566213020333)
@@ -24,7 +24,6 @@
 
 import javax.servlet.http.HttpServletRequest;
 import java.util.Map;
-import java.util.Objects;
 import java.util.Optional;
 
 import static ru.javawebinar.topjava.util.exception.ErrorType.*;
@@ -74,10 +73,7 @@
                 ((BindException) e).getBindingResult() : ((MethodArgumentNotValidException) e).getBindingResult();
 
         String[] details = result.getFieldErrors().stream()
-                .map(fe -> {
-                    String msg = fe.getDefaultMessage();
-                    return msg == null ? messageUtil.getMessage(fe) : (msg.startsWith(fe.getField())) ? msg : fe.getField() + ' ' + msg;
-                }).filter(Objects::nonNull)
+                .map(fe -> messageUtil.getMessage(fe))
                 .toArray(String[]::new);
 
         return logAndGetErrorInfo(req, e, false, VALIDATION_ERROR, details);
@@ -95,8 +91,7 @@
         return logAndGetErrorInfo(req, e, true, APP_ERROR);
     }
 
-    //    https://stackoverflow.com/questions/538870/should-private-helper-methods-be-static-if-they-can-be-static
-    private static ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logException, ErrorType errorType, String... details) {
+    private ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logException, ErrorType errorType, String... details) {
         Throwable rootCause = ValidationUtil.getRootCause(e);
         if (logException) {
             log.error(errorType + " at request " + req.getRequestURL(), rootCause);
@@ -104,6 +99,7 @@
             log.warn("{} at request  {}: {}", errorType, req.getRequestURL(), rootCause.toString());
         }
         return new ErrorInfo(req.getRequestURL(), errorType,
+                messageUtil.getMessage(errorType.getErrorCode()),
                 details.length != 0 ? details : new String[]{ValidationUtil.getMessage(rootCause)});
     }
 }
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java	(date 1566212643000)
+++ src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java	(date 1566213020326)
@@ -2,11 +2,13 @@
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.ControllerAdvice;
 import org.springframework.web.bind.annotation.ExceptionHandler;
 import org.springframework.web.servlet.ModelAndView;
 import ru.javawebinar.topjava.AuthorizedUser;
 import ru.javawebinar.topjava.util.ValidationUtil;
+import ru.javawebinar.topjava.util.exception.ErrorType;
 
 import javax.servlet.http.HttpServletRequest;
 
@@ -14,11 +16,15 @@
 public class GlobalControllerExceptionHandler {
     private static final Logger log = LoggerFactory.getLogger(GlobalControllerExceptionHandler.class);
 
+    @Autowired
+    private MessageUtil messageUtil;
+
     @ExceptionHandler(Exception.class)
     public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception {
         log.error("Exception at request " + req.getRequestURL(), e);
         Throwable rootCause = ValidationUtil.getRootCause(e);
         ModelAndView mav = new ModelAndView("exception/exception");
+        mav.addObject("typeMessage", messageUtil.getMessage(ErrorType.APP_ERROR.getErrorCode()));
         mav.addObject("exception", rootCause);
         mav.addObject("message", ValidationUtil.getMessage(rootCause));
 
Index: src/main/webapp/resources/js/topjava.common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/resources/js/topjava.common.js	(date 1566212643000)
+++ src/main/webapp/resources/js/topjava.common.js	(date 1566212734379)
@@ -11,7 +11,10 @@
                     "dataSrc": ""
                 },
                 "paging": false,
-                "info": true
+                "info": true,
+                "language": {
+                    "search": i18n["common.search"]
+                }
             }
         ));
 
@@ -97,7 +100,7 @@
     closeNoty();
     const errorInfo = JSON.parse(jqXHR.responseText);
     failedNote = new Noty({
-        text: "<span class='fa fa-lg fa-exclamation-circle'></span> &nbsp;" + i18n["common.errorStatus"] + ": " + jqXHR.status + "<br>" + errorInfo.type + "<br>" + errorInfo.details.join("<br>"),
+        text: "<span class='fa fa-lg fa-exclamation-circle'></span> &nbsp;" + errorInfo.typeMessage + "<br>" + errorInfo.details.join("<br>"),
         type: "error",
         layout: "bottomRight"
     }).show();
